@using System.Diagnostics.Eventing.Reader
@model Rose.VExtension.Server.Models.PluginViewModel

@{
    ViewBag.Title = "PluginDetails";
    Layout = "~/Views/Shared/_DebugLayout.cshtml";
}

<h1>@Model.Plugin.Name</h1>
<hr/>
<p>Идентификатор: @Model.Plugin.Id</p>


<h1>Файловая система</h1>
<table class="table table-bordered">
    <thead>
        <tr>
            <td>Имя</td>
            <td>Путь</td>
        </tr>
    </thead>
    <tbody>
        @{
            var fileSystem = Model.Plugin.FileSystem;
        }
        
        @foreach (var item in fileSystem.EnumerateItems())
        {
            <tr>
                @{
                    var extension = Path.GetExtension(item.Uri);
                    
                }
                @if (extension != ".js")
                {
                    <td><a href="@Url.Action("OpenFile", "FileSystem", new RouteValueDictionary {{"filePath", item.Uri}, {"pluginId", Model.Enity.Id}})">@item.Name</a></td>
                }
                else
                {
                    <td><a href="@Url.Action("Index", "JavascriptEditor", new RouteValueDictionary { { "jsFileName", item.Uri }, { "pluginId", Model.Enity.Id } })">@item.Name</a></td>
                }
                <td>@item.Uri</td>
            </tr>
        }

    </tbody>
</table>
<hr/>

@if (Model.Enity.StorageItems.Count != 0)
{
    <h1>Локальное хранилище</h1>
    <table class="table table-bordered">
        <thead>
            <tr>
                <td>Имя</td>
                <td>Значение</td>
                <td>Действия</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Enity.StorageItems)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Value</td>
                    <td>
                        <a class="btn btn-danger" href="@Url.Action("DeleteStorageItem", new RouteValueDictionary() {{"pluginId", Model.Enity.Id}, {"name", item.Name}})">Удалить</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<h2>Элементы в локальном хранилище не найдены</h2>

<hr>

@if (Model.Enity.ResourceTokens.Count != 0)
{

    <h1>Токены доступа</h1>
    <table class="table table-bordered">
        <thead>
            <tr>
                <td>Токен</td>
                <td>Имя ресурса</td>
                <td>Время действия</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var token in Model.Enity.ResourceTokens)
            {
                <tr>
                    <td>
                        <a href="@Url.Action("Index", "Resources", new RouteValueDictionary() {{"id", token.Id}})"></a>
                    </td>
                    <td>@token.ResourcePath</td>
                    <td>@token.Lifetime</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h2>Токены доступа не найдены</h2>
}